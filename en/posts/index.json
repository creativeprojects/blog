[{"content":"If you’re not using Cloudflare yet, maybe you should consider it Here are all the good reasons why you should use it:  It’s free.\nWell the basic version is free, and it’s enough for most people. Really. It can prevent DDoS attacks on your website. You get a free CDN.\nIt will speed up all the static files of your website by caching them in the Cloudflare servers: all your .css, .js and images. Even your static html pages if you have any.\nAnd all of that is automatic: their servers keep your files in a cache as your visitors download them and they will send them directly after that. It gives you a free SSL certificate.\nAlthough I suppose nowadays most providers also give a letsencrypt certificate for free.  \u0026hellip;and the reason why you wouldn\u0026rsquo;t want to use it:  It is a man-in-the-middle.\nIt decrypts your HTTPS traffic. There\u0026rsquo;s a lot to say about that, but I\u0026rsquo;d refer to the security experts. This is a long article but it\u0026rsquo;s worth it: CloudFlare, SSL and unhealthy security absolutism  You’ve decided to go for it? By now, you should know that when somebody browses your website, it goes through the Cloudflare platform, which gets the files from your server, then serves them back to your visitor.\nThe public IP of your website points to the Cloudflare servers, and no longer yours. This is a bit safer for you as nobody would know the IP of your servers.\nFirst request: sequenceDiagram participant Client participant Cloudflare participant Server Client-\u0026gt;\u0026gt;Cloudflare: GET image.jpg Note over Cloudflare: not in cache Cloudflare-\u0026gt;\u0026gt;Server: GET image.jpg Server-\u0026gt;\u0026gt;Cloudflare: image.jpg Note over Cloudflare: save in cache Cloudflare-\u0026gt;\u0026gt;Client: image.jpg Second request: sequenceDiagram participant Client participant Cloudflare participant Server Client-\u0026gt;\u0026gt;Cloudflare: GET image.jpg Note over Cloudflare: already in cache Cloudflare-\u0026gt;\u0026gt;Client: image.jpg But there’s still a risk that an attacker discovers the IP address of your server. And it’s much easier than you think:\nif for example your web server sends contact emails, it’s very likely its IP address will end-up somewhere in the email headers.\nYou should restrict your website to the IP addresses of the Cloudflare servers only. If your website is hosted on a Linux box, here’s a very quick script you can run on your server to enhance your security.\nThis script makes use of ufw, which is installed by default on Ubuntu, and should also be available as a native package in most distributions.\nPlease read the instructions on how to set up ufw if you haven’t done so (Instructions for Debian).\nFor the following script to work properly, it\u0026rsquo;s expected your default rule is to deny incoming traffic:\n1 2 3 4 5 6 7 8 9  $ sudo ufw status verbose Status: active Logging: off Default: deny (incoming), allow (outgoing), disabled (routed) New profiles: skip To Action From -- ------ ---- [...]   Generating ufw configuration for Cloudflare IPs 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  #!/bin/bash  ports=\u0026#34;80,443\u0026#34; ipv4=\u0026#34;ips-v4\u0026#34; ipv6=\u0026#34;ips-v6\u0026#34; installv4=\u0026#34;install-v4.sh\u0026#34; installv6=\u0026#34;install-v6.sh\u0026#34; rm -f $ipv4 $ipv6 echo \u0026#34;Downloading IPv4 addresses...\u0026#34; curl https://www.cloudflare.com/$ipv4 | sort \u0026gt;$ipv4 echo \u0026#34;Downloading IPv6 addresses...\u0026#34; curl https://www.cloudflare.com/$ipv6 | sort \u0026gt;$ipv6 echo \u0026#34;#!/bin/sh\u0026#34; \u0026gt; \u0026#34;$installv4\u0026#34; echo \u0026#34;#!/bin/sh\u0026#34; \u0026gt; \u0026#34;$installv6\u0026#34; while IFS=\u0026#39;\u0026#39; read -r line || [[ -n \u0026#34;$line\u0026#34; ]]; do echo \u0026#34;ufw allow from $lineto any port $portsproto tcp\u0026#34; \u0026gt;\u0026gt; \u0026#34;$installv4\u0026#34; done \u0026lt; \u0026#34;$ipv4\u0026#34; while IFS=\u0026#39;\u0026#39; read -r line || [[ -n \u0026#34;$line\u0026#34; ]]; do echo \u0026#34;ufw allow from $lineto any port $portsproto tcp\u0026#34; \u0026gt;\u0026gt; \u0026#34;$installv6\u0026#34; done \u0026lt; \u0026#34;$ipv6\u0026#34;   Simply copy and paste this script onto your Linux box, or download it via the link provided, then mark the script as executable and run it:\n1 2 3  $ curl -O https://creativeprojects.tech/scripts/cloudflare_ufw_config.sh $ chmod +x cloudflare_ufw_config.sh $ ./cloudflare_ufw_config.sh   The script will download two files from Cloudflare: ipv4 and ipv6, which contain the IP addresses of the edge servers that Cloudflare is using to browse your website.\nIf we only allow these IPs to connect to your website, you’re completely safe against a DDoS on your website (but not a DDoS on ssh or whatever else you’re using on this server).\nAfter running the script you will find it had created two scripts: install-v4.sh and install-v6.sh. Please check the content of these two files, because you shouldn’t trust any script downloaded or generated by a script from the Internet. You can see it contains all the IP addresses of the Cloudflare edge servers to be allowed through the Linux firewall.\nRun these two scripts if you use IPv6, or only the first one if you don’t.\n1 2 3  $ chmod +x install-v*.sh $ sudo ./install-v4.sh $ sudo ./install-v6.sh   And you should see all the IPs allowed for HTTP (tcp 80) and HTTPS (tcp 443):\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  $ sudo ufw status Status: active To Action From -- ------ ---- 22/tcp ALLOW *************** 80,443/tcp ALLOW 103.21.244.0/22 80,443/tcp ALLOW 103.22.200.0/22 80,443/tcp ALLOW 103.31.4.0/22 80,443/tcp ALLOW 104.16.0.0/12 80,443/tcp ALLOW 108.162.192.0/18 80,443/tcp ALLOW 131.0.72.0/22 80,443/tcp ALLOW 141.101.64.0/18 80,443/tcp ALLOW 162.158.0.0/15 80,443/tcp ALLOW 172.64.0.0/13 80,443/tcp ALLOW 173.245.48.0/20 80,443/tcp ALLOW 188.114.96.0/20 80,443/tcp ALLOW 190.93.240.0/20 80,443/tcp ALLOW 197.234.240.0/22 80,443/tcp ALLOW 198.41.128.0/17 80,443/tcp ALLOW 2400:cb00::/32 80,443/tcp ALLOW 2405:8100::/32 80,443/tcp ALLOW 2405:b500::/32 80,443/tcp ALLOW 2606:4700::/32 80,443/tcp ALLOW 2803:f800::/32 80,443/tcp ALLOW 2a06:98c0::/29 80,443/tcp ALLOW 2c0f:f248::/32   That’s it! A wee bit safer. I don’t know if Cloudflare is adding or removing servers very often, but they say they would update the list if they do. In which case, just clear up your ufw rules and run this script again.\nAlthough if it ever happens, I shall write a script to flush the existing rules and regenerates the configuration automatically.\nI haven’t had the need for it yet.\nP.S. No I don\u0026rsquo;t have shares in Cloudflare, I\u0026rsquo;m just a simple subscriber of their free offering.\n","description":"How to secure your web server behind Cloudflare by allowing browsing only from Cloudflare edge servers","id":0,"section":"posts","tags":["cdn","cloudflare","ddos","linux","ufw"],"title":"Better protection against DDoS using Cloudflare and Linux firewall","uri":"https://creativeprojects.tech/en/posts/cloudflare-linux-firewall/"},{"content":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\n https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremelly fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","description":"Hugo, the world’s fastest framework for building websites","id":1,"section":"","tags":null,"title":"About","uri":"https://creativeprojects.tech/en/about/"}]